"""
Django settings for sport_site project.

Generated by 'django-admin startproject' using Django 1.11.14.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 网页文件地址
TEMPLATE_DIR = os.path.join(BASE_DIR,'templates')
# 静态文件地址
STATIC_DIR = os.path.join(BASE_DIR,'static')
# media文件地址
MEDIA_DIR = os.path.join(BASE_DIR,'media')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jg@3f4!1j5^$v(eewb-!_6re*6+fp&ht1y5!kuxsd#1m9d=1-7'

# SECURITY WARNING: don't run with debug turned on in production!
# 部署之前
DEBUG = True

ALLOWED_HOSTS = []

# 部署之后
# DEBUG = False
# TEMPLATES_DEBUG = False
# ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 人性化(humanize)包,它包含一组为数据添加“人性化（human touch）”的工具集。
    # 例如，我们可以使用它来更自然地显示日期和时间字段。我们可以简单地显示：“2分钟前”，而不是显示整个日期。
    'django.contrib.humanize',

    # 当使用 Bootstrap 或者其他的前端库时，使用一个叫做 django-widget-tweaks 的 Django 库。它可以让我们更好地控制渲染的处理
    'widget_tweaks',

    # 自己编写的app
    'mysport',
    'accounts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sport_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 配置media
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'sport_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'sport_site',
        'USER':'root',
        'PASSWORD': '1079517726wd',                 
        'HOST': '127.0.0.1',                     
        'PORT': '3306',
        }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# 静态网页的设置
STATIC_URL = '/static/'
STATICFILES_DIRS = [STATIC_DIR]

MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = '/media/'

# 在这里我们给变量指定了一个URL模型的名称，以告诉Django当用户退出登录之后跳转的地址。
LOGOUT_REDIRECT_URL = 'home'

# 在这里我们给变量指定了一个URL模型的名称，以告诉Django当用户登录成功之后跳转的地址
LOGIN_REDIRECT_URL = 'home'

# 发送邮件修改密码
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# 定义我们应用程序的登录URL
LOGIN_URL = 'login'
